version: 2.1
jobs:
  build:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - run:
          name: Install Docker Compose
          command: |
            set -x
            curl -L https://github.com/docker/compose/releases/download/1.25.3/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
            chmod +x /usr/local/bin/docker-compose
            
      - run:
          name: Start container and verify it is working
          command: |
            set -x
            docker-compose up -d
            docker run --network container:contacts \
              appropriate/curl --retry 10 --retry-delay 1 --retry-connrefused http://localhost:8080/contacts/test
     

      - run:
          name: Start the PostgreSQL container
          command: |
            set -x
            docker run --name pactbroker-db -e POSTGRES_PASSWORD=mysecretpassword -e POSTGRES_USER=some-postgres -d postgres

      - run:
          name: Connect to the container and execute psql
          command: |
            set -x
            docker run --name pactbroker --link pactbroker-db:postgres -e PACT_BROKER_DATABASE_USERNAME=pactbrokeruser -e PACT_BROKER_DATABASE_PASSWORD=TheUserPassword -e PACT_BROKER_DATABASE_HOST=postgres -e PACT_BROKER_DATABASE_NAME=pactbroker -d -p 80:80 dius/pact-broker

      - run:
          name: Run the following SQL configuration scripts
          command: |
            echo "CREATE USER pactbrokeruser WITH PASSWORD 'TheUserPassword';" 
            echo "CREATE DATABASE pactbroker WITH OWNER pactbrokeruser;"
            echo "GRANT ALL PRIVILEGES ON DATABASE pactbroker TO pactbrokeruser;"

      - run:
          name: Start the PactBroker container
          command: |
            set -x
            docker run --name pactbroker --link pactbroker-db:postgres -e PACT_BROKER_DATABASE_USERNAME=pactbrokeruser -e PACT_BROKER_DATABASE_PASSWORD=TheUserPassword -e PACT_BROKER_DATABASE_HOST=postgres -e PACT_BROKER_DATABASE_NAME=pactbroker -d -p 80:80 dius/pact-broker


      - run: 
          name: Install project dependencies
          command: npm install
      - run:
          name: Run consumer contract tests
          command: npm run test:pact:consumer
      - run:
          name: Publish contract to Pactflow
          command: npm run publish:pact
      - run:
          name: Run provider contract tests
          command: npm run test:pact:provider
      - run:
          name: Tag latest provider version
          command: npm run create:provider:tag
      - run:
          name: Can I deploy consumer?
          command: npm run can:i:deploy:consumer
      - run:
          name: Tag latest consumer version
          command: npm run create:consumer:tag
